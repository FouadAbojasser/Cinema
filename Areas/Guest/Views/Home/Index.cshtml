@using Cinema.Models.ViewModels
@model MoviesWithFiltersVM
<!-- hero area start -->
<section class="hero-area" id="home">
	<div class="container">
		<div class="hero-area-slider">
			@foreach (var item in Model.TopRated)
			{
				<div class="row hero-area-slide">
					<div class="col-lg-6 col-md-5">
						<div class="hero-area-content">
							@foreach(var img in item.Images)
							{
								if (img.Type == "poster")
								{
									<img src="~/img/posters/@img.Name" alt="Poster Image" class="px-2 py-4" />
								}
							}
						</div>
					</div>
					<div class="col-lg-6 col-md-7">
						<div class="hero-area-content pr-50">
							<h2>
								<a href="/Guest/Home/MovieDetails/@item.Id" class="text-white">
									@item.Title
								</a>
							</h2>
							<div class="review">
								<div class="author-review">
									@{
										double rate = item.Rate; 
										double stars = rate / 2; 
										int fullStars = (int)stars;
										bool hasHalfStar = (stars - fullStars) >= 0.5;
										int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
									}

									@for (int i = 0; i < fullStars; i++)
									{
										<i class="icofont icofont-star" style="color: gold;"></i> <!-- Full star -->
									}

									@if (hasHalfStar)
									{
										<i class="icofont icofont-star" style="background: linear-gradient(90deg, gold 50%, gray 50%); -webkit-background-clip: text; color: transparent;"></i> <!-- Half star -->
									}

									@for (int i = 0; i < emptyStars; i++)
									{
										<i class="icofont icofont-star" style="color: gray;"></i> <!-- Empty star -->
									}
								</div>
								<h4>@item.Rate</h4>
							</div>

							<p>@item.Overview</p>

							<h3>Cast:</h3>
							<div class="slide-cast">
								@foreach (var actor in item.Actors)
								{
									<div class="single-slide-cast mx-2">
										<a href="/Guest/Home/ActorDetails/@actor.Id">
											<img src="~/img/cast/avatar/@actor.Img" alt="@actor.Img" />
										</a>
									</div>
								}
							</div>
							<div class="slide-trailor">
								<h3>
									<a href="@item.Trailer" class="popup-youtube">
										Watch Trailer
									</a>
								</h3>
								@if (User is not null && User!.Identity.IsAuthenticated)
								{
									<a class="theme-btn theme-btn2" href="#"><i class="icofont icofont-play"></i> Tickets</a>
								}
							</div>

						</div>
					</div>
				</div>
			}
		</div>

		<!--Right and Left Sides of Slider -->
		<div class="hero-area-thumb">
			@for (int i = 0; i < 2; i++)
			{
				var thumbClass = i == 0 ? "thumb-prev" : "thumb-next";
				<div class="@thumbClass">
					<div class="row hero-area-slide">
						<div class="col-lg-6">
							<div class="hero-area-content">
								@foreach (var img in Model.TopRated[i].Images)
								{
									if (img.Type == "poster")
									{
										<img src="~/img/posters/@img.Name" alt="Image" class="px-2 py-4" />
									}
								}
							</div>
						</div>

						<div class="col-lg-6">
							<div class="hero-area-content pr-50">
								<h2>@Model.TopRated[i].Title</h2>
								<div class="review">
									<div class="author-review">
										@{
											double rate = Model.TopRated[i].Rate; 
											double stars = rate / 2; 
											int fullStars = (int)stars;
											bool hasHalfStar = (stars - fullStars) >= 0.5;
											int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
										}

										@for (int star = 0; star < fullStars; star++)
										{
											<i class="icofont icofont-star" style="color: gold;"></i> <!-- Full star -->
										}

										@if (hasHalfStar)
										{
											<i class="icofont icofont-star" style="background: linear-gradient(90deg, gold 50%, gray 50%); -webkit-background-clip: text; color: transparent;"></i> <!-- Half star -->
										}

										@for (int star = 0; star < emptyStars; star++)
										{
											<i class="icofont icofont-star" style="color: gray;"></i> <!-- Empty star -->
										}
									</div>
									<h4>@Model.TopRated[i].Rate</h4>
								</div>
								<p>@Model.TopRated[i].Overview</p>
								<h3>Cast:</h3>
								<div class="slide-cast">
									@foreach (var actor in Model.TopRated[i].Actors)
									{
										<div class="single-slide-cast mx-2">
											<img src="~/img/cast/@actor.Img" alt="@actor.Img" />
										</div>
									}
								</div>
								<div class="slide-trailor">
									<h3>Watch Trailer</h3>
									<a class="theme-btn theme-btn2" href="#"><i class="icofont icofont-play"></i> Tickets</a>
								</div>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
		<!--End of Right and Left Sides of Slider -->
	</div>
</section><!-- hero area end -->


<!-- portfolio section start -->
<section class="portfolio-area pt-60">
	<div class="container">
		<div class="row flexbox-center">
			<div class="col-lg-6 text-center text-lg-left">
				<div class="section-title">
					<h1><i class="icofont icofont-movie"></i> Spotlight This Month</h1>
				</div>
			</div>
			<div class="col-lg-6 text-center text-lg-right">
				<div class="portfolio-menu">
					<ul>
						<li data-filter="*" class="active">All</li>
						<li data-filter=".soon">Comming Soon</li>
						<li data-filter=".top">Top Rated</li>
						<li data-filter=".released">Recently Released</li>
					</ul>
				</div>
			</div>
		</div>
		<hr/>

		<div class="row">
			<div class="col text-center">
				<div class="row portfolio-item">

					@foreach (var movie in Model.Latest)
					{
						<div class="col-md-4 col-sm-6 latest">
							<div class="single-portfolio">
								<div class="single-portfolio-img">
									@foreach (var img in movie.Images)
									{
										@if (img.Type == "poster")
										{
											<img src="~/img/posters/@img.Name" alt="Image" />
										}

									}
									<a href="@movie.Trailer" class="popup-youtube">
										<i class="icofont icofont-ui-play"></i>
									</a>
								</div>
								<div class="portfolio-content text-center">
									<h2 class="mb-1">
										<a href="/Guest/Home/MovieDetails/@movie.Id" class="text-white">
											@movie.Title
										</a>
									</h2>

									<div class="d-flex justify-content-center align-items-center">
										<div class="author-review me-0">
											@{
												double rate = movie.Rate; 
												double stars = rate / 2; 
												int fullStars = (int)stars; 
												bool hasHalfStar = (stars - fullStars) >= 0.5;
												int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
											}

											@for (int i = 0; i < fullStars; i++)
											{
												<i class="icofont icofont-star mx-0" style="color: gold;"></i> <!-- Full yellow star -->
											}

											@if (hasHalfStar)
											{
												<i class="icofont icofont-star mx-0" style="background: linear-gradient(90deg, gold 50%, gray 50%); -webkit-background-clip: text; color: transparent;"></i> <!-- Half star -->
											}

											@for (int i = 0; i < emptyStars; i++)
											{
												<i class="icofont icofont-star mx-0" style="color: gray;"></i> <!-- Empty gray star -->
											}
										</div>
										<h4 class="m-3">@movie.Rate</h4>
									</div>
								</div>
							</div>
						</div>
					}

					@foreach (var movie in Model.CommingSoon)
					{
						<div class="col-md-4 col-sm-6 soon">
							<div class="single-portfolio">
								<div class="single-portfolio-img">
									@foreach (var img in movie.Images)
									{
										@if (img.Type == "poster")
										{
											<img src="~/img/posters/@img.Name" alt="Image" />
										}

									}
									<a href="@movie.Trailer" class="popup-youtube">
										<i class="icofont icofont-ui-play"></i>
									</a>
								</div>
								<div class="portfolio-content text-center">
									<h2 class="mb-1">
										<a href="/Guest/Home/MovieDetails/@movie.Id" class="text-white">
											@movie.Title
										</a>
									</h2>
									<div class="d-flex justify-content-center align-items-center">
										<div class="author-review me-0">
											@{
												double rate = movie.Rate; 
												double stars = rate / 2; 
												int fullStars = (int)stars; 
												bool hasHalfStar = (stars - fullStars) >= 0.5;
												int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
											}

											@for (int i = 0; i < fullStars; i++)
											{
												<i class="icofont icofont-star mx-0" style="color: gold;"></i> <!-- Full yellow star -->
											}

											@if (hasHalfStar)
											{
												<i class="icofont icofont-star mx-0" style="background: linear-gradient(90deg, gold 50%, gray 50%); -webkit-background-clip: text; color: transparent;"></i> <!-- Half star -->
											}

											@for (int i = 0; i < emptyStars; i++)
											{
												<i class="icofont icofont-star mx-0" style="color: gray;"></i> <!-- Empty gray star -->
											}
										</div>
										<h4 class="m-3">@movie.Rate</h4>
									</div>
								</div>
							</div>
						</div>
					}

					@foreach (var movie in Model.TopRated)
					{
						<div class="col-md-4 col-sm-6 top">
							<div class="single-portfolio">
								<div class="single-portfolio-img">
									@foreach (var img in movie.Images)
									{
										@if (img.Type == "poster")
										{
											<img src="~/img/posters/@img.Name" alt="Image" />
										}

									}
									<a href="@movie.Trailer" class="popup-youtube">
										<i class="icofont icofont-ui-play"></i>
									</a>
								</div>
								<div class="portfolio-content text-center">
									<h2 class="mb-1">
										<a href="/Guest/Home/MovieDetails/@movie.Id" class="text-white">
											@movie.Title
										</a>
									</h2>
									<div class="d-flex justify-content-center align-items-center">
										<div class="author-review me-0">
											@{
												double rate = movie.Rate; 
												double stars = rate / 2; 
												int fullStars = (int)stars; 
												bool hasHalfStar = (stars - fullStars) >= 0.5;
												int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
											}

											@for (int i = 0; i < fullStars; i++)
											{
												<i class="icofont icofont-star mx-0" style="color: gold;"></i> <!-- Full yellow star -->
											}

											@if (hasHalfStar)
											{
												<i class="icofont icofont-star mx-0" style="background: linear-gradient(90deg, gold 50%, gray 50%); -webkit-background-clip: text; color: transparent;"></i> <!-- Half star -->
											}

											@for (int i = 0; i < emptyStars; i++)
											{
												<i class="icofont icofont-star mx-0" style="color: gray;"></i> <!-- Empty gray star -->
											}
										</div>
										<h4 class="m-3">@movie.Rate</h4>
									</div>
								</div>
							</div>
						</div>
					}

					@foreach (var movie in Model.RecentlyReleased)
					{
						<div class="col-md-4 col-sm-6 released">
							<div class="single-portfolio">
								<div class="single-portfolio-img">
									@foreach (var img in movie.Images)
									{
										@if (img.Type == "poster")
										{
											<img src="~/img/posters/@img.Name" alt="Image" />
										}

									}
									<a href="@movie.Trailer" class="popup-youtube">
										<i class="icofont icofont-ui-play"></i>
									</a>
								</div>
								<div class="portfolio-content text-center">
									<h2 class="mb-1">
										<a href="/Guest/Home/MovieDetails/@movie.Id" class="text-white">
											@movie.Title
										</a>
									</h2>
									<div class="d-flex justify-content-center align-items-center">
										<div class="author-review me-0">
											@{
												double rate = movie.Rate; 
												double stars = rate / 2; 
												int fullStars = (int)stars; 
												bool hasHalfStar = (stars - fullStars) >= 0.5;
												int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
											}

											@for (int i = 0; i < fullStars; i++)
											{
												<i class="icofont icofont-star mx-0" style="color: gold;"></i> <!-- Full yellow star -->
											}

											@if (hasHalfStar)
											{
												<i class="icofont icofont-star mx-0" style="background: linear-gradient(90deg, gold 50%, gray 50%); -webkit-background-clip: text; color: transparent;"></i> <!-- Half star -->
											}

											@for (int i = 0; i < emptyStars; i++)
											{
												<i class="icofont icofont-star mx-0" style="color: gray;"></i> <!-- Empty gray star -->
											}
										</div>
										<h4 class="m-3">@movie.Rate</h4>
									</div>

								</div>
							</div>
						</div>
					}


				</div>
			</div>
		</div>
	</div>
</section><!-- portfolio section end -->



<!-- video section start -->
<section class="video ptb-90">
	<div class="container">
		<div class="row">
			<div class="col-lg-12">
				<div class="section-title pb-20">
					<h1><i class="icofont icofont-film"></i> Trailers & Videos</h1>
				</div>
			</div>
		</div>
		<hr />
		<div class="row">
			<div class="col-md-9">
				<div class="video-area">


					@{
						var random = new Random();
						var minValue = 0;
						var maxValue = Model.TopTrailerSection.Count;
						int randomIndex = random.Next(minValue, maxValue);
						// <h1>@randomIndex</h1>
						if (Model.TopTrailerSection[randomIndex].Images != null)
						{
							var firstSliderImage = Model.TopTrailerSection[randomIndex].Images
							.FirstOrDefault(img => img.Type == "slider");

							<img src="~/img/sliders/@firstSliderImage?.Name" alt="Image" />
						}
					}
					<a href="@Model.TopTrailerSection[randomIndex].Trailer" class="popup-youtube">
						<i class="icofont icofont-ui-play"></i>
					</a>
					<div class="video-text">
						<h2>@Model.TopTrailerSection[randomIndex].Title</h2>
						<div class="review">
							<div class="author-review">
								@{
									double rate2 = Model.TopTrailerSection[randomIndex].Rate;
									double stars2 = rate2 / 2; 
									int fullStars2 = (int)stars2;
									bool hasHalfStar2 = (stars2 - fullStars2) >= 0.5;
									int emptyStars2 = 5 - fullStars2 - (hasHalfStar2 ? 1 : 0);
								}

								@for (int i = 0; i < fullStars2; i++)
								{
									<i class="icofont icofont-star" style="color: gold;"></i> <!-- Full yellow star -->
								}

								@if (hasHalfStar2)
								{
									<i class="icofont icofont-star" style="background: linear-gradient(90deg, gold 50%, gray 50%); -webkit-background-clip: text; color: transparent;"></i> <!-- Half star -->
								}

								@for (int i = 0; i < emptyStars2; i++)
								{
									<i class="icofont icofont-star" style="color: gray;"></i> <!-- Empty gray star -->
								}
							</div>
							<h4>@Model.TopTrailerSection[randomIndex].Rate</h4>
						</div>
					</div>
				</div>

			</div>
			<div class="col-md-3">
				<div class="row">
					<div class="col-md-12 col-sm-6">
						<div class="video-area" >
							@{
								var random2 = new Random();
								var minValue2 = 0;
								var maxValue2 = Model.CommingSoon.Count;
								int randomIndex2 = random.Next(minValue2, maxValue2);

								if (Model.CommingSoon[randomIndex2].Images != null)
								{
									var SliderImage2 = Model.CommingSoon[randomIndex2].Images
									.FirstOrDefault(img => img.Type == "slider");
									<img src="~/img/sliders/@SliderImage2?.Name" alt="Image" style="width: 250px; height: 140px; object-fit: contain; border: 1px solid #ccc;" />
								}
							}
							<a href="@Model.CommingSoon[randomIndex2].Trailer" class="popup-youtube">
								<i class="icofont icofont-ui-play"></i>
							</a>
						</div>
					</div>

					<div class="col-md-12 col-sm-6">
						<div class="video-area my-3">
							@{
								var random3 = new Random();
								var minValue3 = 0;
								var maxValue3 = Model.TopRated.Count;
								int randomIndex3 = random.Next(minValue3, maxValue3);

								if (Model.TopRated[randomIndex3].Images != null)
								{
									var SliderImage3 = Model.TopRated[randomIndex3].Images
									.FirstOrDefault(img => img.Type == "slider");
									<img src="~/img/sliders/@SliderImage3?.Name" alt="Image" style="width: 250px; height: 140px; object-fit: contain; border: 1px solid #ccc;" />
								}
							}
							<a href="@Model.TopRated[randomIndex3].Trailer" class="popup-youtube">
								<i class="icofont icofont-ui-play"></i>
							</a>
						</div>
					</div>


					<div class="col-md-12 col-sm-6 mt-0">
						<div class="video-area mt-0">
							@{
								var random4 = new Random();
								var minValue4 = 0;
								var maxValue4 = Model.RecentlyReleased.Count;
								int randomIndex4 = random.Next(minValue4, maxValue4);

								if (Model.RecentlyReleased[randomIndex4].Images != null)
								{
									var SliderImage4 = Model.RecentlyReleased[randomIndex4].Images
									.FirstOrDefault(img => img.Type == "slider");
									<img src="~/img/sliders/@SliderImage4?.Name" alt="Image" style="width: 250px; height: 140px; object-fit: contain ; border: 1px solid #ccc;" />
								}
							}
							<a href="@Model.RecentlyReleased[randomIndex4].Trailer" class="popup-youtube">
								<i class="icofont icofont-ui-play"></i>
							</a>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>
</section><!-- video section end -->



<!-- news section start -->
<section class="news">
	<div class="container">
		<div class="row">
			<div class="col-lg-12">
				<div class="section-title pb-20">
					<h1><i class="icofont icofont-coffee-cup"></i> Latest News</h1>
				</div>
			</div>
		</div>
		<hr />
	</div>

	<div class="news-slide-area">
		<div class="news-slider">
			@foreach (var movie in Model.CommingSoon)
			{
				<div class="single-news">
					@{
						var firstSliderImage = movie.Images.FirstOrDefault(img => img.Type == "slider");
						if (firstSliderImage != null)
						{
							<div class="news-bg-1" style="background: url('../img/sliders/@firstSliderImage.Name') no-repeat center / cover ;"></div>

						}
					}

					<div class="news-date">
						<h2><span>@movie.ReleaseDate?.ToString("MMM")</span> @movie.ReleaseDate?.Day</h2>
						<h1>@movie.ReleaseDate?.Year</h1>
					</div>
					<div class="news-content">
						<h2>@movie.Title</h2>
						@if (@movie.Overview.Length > 200)
						{
							<p>@movie.Overview.Substring(0, 200)...</p>
						}else
						{
							<p>@movie.Overview</p>
						}
					</div>
					<a href="#">Read More</a>
				</div>
			}
		</div>


		<div class="news-thumb">
			@for (int i = 0; i < 2; i++)
			{
				var cssClass = i == 1 ? "news-next" : "news-prev";
				<div class="@cssClass">
					<div class="single-news">
						@foreach (var img in Model.CommingSoon[i].Images)
						{
							if (img.Type == "slider")
							{
								<div class="news-bg-1" style="background: url('../img/sliders/@img.Name') no-repeat center / cover"></div>
							}
						}
						<div class="news-date">
							<h2><span>@Model.CommingSoon[i].ReleaseDate?.ToString("MMM")</span> @Model.CommingSoon[i].ReleaseDate?.Day</h2>
							<h1>@Model.CommingSoon[i].ReleaseDate?.Year</h1>
						</div>
						<div class="news-content">
							<h2>@Model.CommingSoon[i].Title</h2>
							<p>@(Model.CommingSoon[i].Overview.Length > 200 ? Model.CommingSoon[i].Overview.Substring(0, 200) + "..." : Model.CommingSoon[i].Overview)</p>
						</div>
						<a href="#">Read More</a>
					</div>
				</div>
			}
			</div>
		</div>
</section><!-- news section end -->

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

@if (TempData["Notification"] != null)
	{
		<script>
			Swal.fire({
				position: "center",
				icon: "success",
				title: "@TempData["Notification"]",
				showConfirmButton: false,
				timer: 2000,
				background: "#1e1e1e", // dark background
				color: "#ffffff", // white text
				iconColor: "#00ff00" // optional: change icon color for dark mode
			});
		</script>
	}

@if (TempData["ConfirmEmail"] != null)
{
	<script>
		Swal.fire({
			position: "center",
			icon: "error",
			iconColor: "#FF0000",
			title: "@TempData["ConfirmEmail"]",
			showConfirmButton: false,
			timer: 4000,
			background: "#1e1e1e", // dark background
			color: "#ffffff", // white text
		});
	</script>
}
